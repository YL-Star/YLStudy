plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //直接拿到XML的ID进行赋值和点击操作,已弃用
//    id 'kotlin-android-extensions'
//    id 'kotlin-android'
//    id 'kotlin-kapt'
    //hilt
    id 'dagger.hilt.android.plugin'
}
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def android_config = this.getRootProject().ext.android_config

android {
    namespace 'com.yl.study'
//    compileSdk 23
    compileSdk android_config.compileSdkVersion

    defaultConfig {
        applicationId "com.yl.study"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resConfigs 'en', 'cn'

        // 在gradle文件中配置选项参数值（用于APT传参接收）
        // 同学们注意：切记：必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                // project.getName() == app
                arguments = [moduleName: 'app', packageNameForAPT: 'com.yl.study']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding = true
        dataBinding true
    }
    kotlinOptions {
        // 有些三方组件使用了lamb表达式，所以尽量用java8
        jvmTarget = '1.8'
    }
    java {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(':apt:annotation')
    //注解处理器,服务工程。
//    annotationProcessor project(":compiler")
    kapt project(":apt:compiler")

    implementation project(":moduleCore:webview")
    implementation project(":moduleCore:userLogin")
    implementation project(':moduleComm:comm')


    //camerax
    // CameraX core library using the camera2 implementation
//    def camerax_version = "1.1.0-beta01"
    def camerax_version = "1.2.0-alpha02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    implementation "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation "androidx.camera:camera-mlkit-vision:${camerax_version}"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:${camerax_version}"


    implementation "com.google.dagger:hilt-android:2.28-alpha"
    annotationProcessor "com.google.dagger:hilt-android-compiler:2.28-alpha"
//    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    compileOnly "com.google.auto.service:auto-service:1.0"


//    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'
    // 使用kotlin的时候找不到，需要使用kapt
    kapt "com.google.auto.service:auto-service:1.0"
}